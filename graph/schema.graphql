type Genesis @entity {
    id              : ID!
    tokens          : [Token!]!
}

type Token @entity {
    id              : ID!
    decimals        : BigInt!
    symbol          : String!
}

type Wallet @entity {
    id              : ID!
    factoryAddress  : Bytes!
    creationBlock   : BigInt
    creationDate    : BigInt!
    pending         : [Transaction!]! 
    transactions    : [Transaction!]!
    owners          : [Bytes!]!
    required        : BigInt!
    dailyLimit      : BigInt
}

type Transaction @entity {
    id              : ID!
    date            : BigInt!
    block           : BigInt!
    hash            : Bytes!
    status          : Status
    value           : BigInt
    token           : Token
    from            : Bytes
    to              : Bytes
    type            : Type
    subType         : SubType
    executionId     : BigInt
    wallet          : Wallet! @derivedFrom(field: "transactions")
    confirmations   : [Confirmation!]
}

type Confirmation @entity {
    id              : ID!
    date            : BigInt!
    block           : BigInt!
    hash            : Bytes!
    sender          : Bytes!
    transaction     : Transaction @derivedFrom(field: "confirmations")
}

enum Type {
    VALUE,
    CONTRACT,
    ADMIN
}

enum SubType {
    ADD_OWNER,
    REMOVE_OWNER,
    CHANGE_REQUIREMENT,
    CHANGE_DAILY_LIMIT,
    ERC20
}
enum Status {
    EXECUTED,
    PENDING,
    ERROR
}

